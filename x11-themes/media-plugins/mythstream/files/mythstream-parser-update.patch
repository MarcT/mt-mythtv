diff -crB a/mythstream-0.18_qt4/parsers/google/search.pl b/mythstream-0.18_qt4/parsers/google/search.pl
*** a/mythstream-0.18_qt4/parsers/google/search.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/google/search.pl	2008-01-13 11:41:56.000000000 -0500
***************
*** 115,121 ****
  &read_parse();    # get commandline parameters into @in
  $source = $in[0]; # source filename from command line
  
! eval{ $data = $xml->parsefile($source, ":utf8"); };
  
  
  $entries = $data->getElementsByTagName("item");
--- 114,120 ----
  &read_parse();    # get commandline parameters into @in
  $source = $in[0]; # source filename from command line
  
! eval{ $data = $xml->parsefile($source); };
  
  
  $entries = $data->getElementsByTagName("item");
diff -crB a/mythstream-0.18_qt4/parsers/omroep/medialist.pl b/mythstream-0.18_qt4/parsers/omroep/medialist.pl
*** a/mythstream-0.18_qt4/parsers/omroep/medialist.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/medialist.pl	2008-07-12 18:02:47.000000000 -0400
***************
*** 1,15 ****
  #! /usr/bin/perl
  #* ============================================================
  # * File        : omroep/medialist.pl
! # * Version     : 0.1
  # * Author      : Eric
! # * Date        : 2006-09-11
  # * Description: parser for omroep/menu.pl
  # *
  # * Requires:
  # * - mythstream v0.17_2
  # * - omroep/menu.pl
  # * - omroep/mediaurl.pl
  # *
  # *  
  # * ============================================================ */
--- 1,16 ----
  #! /usr/bin/perl
  #* ============================================================
  # * File        : omroep/medialist.pl
! # * Version     : 0.2
  # * Author      : Eric
! # * Date        : 2008-07-12
  # * Description: parser for omroep/menu.pl
  # *
  # * Requires:
  # * - mythstream v0.17_2
  # * - omroep/menu.pl
  # * - omroep/mediaurl.pl
+ # * - omroep/metaplayer.pl
  # *
  # *  
  # * ============================================================ */
***************
*** 88,96 ****
      {
        $url = @matches[0];
  
-       # nieuw request, ajax? 
-       $url =~ s/\?aflID=/xml\/metaplayer.xml.php?aflID=/;
-       
        $item = $doc->createElement('item');
        $root->appendChild($item);
  
--- 89,94 ----
***************
*** 99,105 ****
        $item->appendChild( newNode('name', $name . " ($date)" ) );
        $item->appendChild( newNode('url', $url) );
        $item->appendChild( newNode('descr', "Uitzending gemist: $name") );
!       $item->appendChild( newNode('handler', "omroep/meta2url") );
  
        $date = "";
        $name = "";
--- 97,103 ----
        $item->appendChild( newNode('name', $name . " ($date)" ) );
        $item->appendChild( newNode('url', $url) );
        $item->appendChild( newNode('descr', "Uitzending gemist: $name") );
!       $item->appendChild( newNode('handler', "omroep/metaplayer") );
  
        $date = "";
        $name = "";
diff -crB a/mythstream-0.18_qt4/parsers/omroep/menu_genres.txt b/mythstream-0.18_qt4/parsers/omroep/menu_genres.txt
*** a/mythstream-0.18_qt4/parsers/omroep/menu_genres.txt	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/menu_genres.txt	2008-07-12 17:40:32.000000000 -0400
***************
*** 1,6 ****
- 25,2-5
- 26,6-12
  1,Amusement
  3,Comedy
  4,Documentaire
  21,Drama
--- 1,5 ----
  1,Amusement
+ 2,Animatie
  3,Comedy
  4,Documentaire
  21,Drama
***************
*** 10,15 ****
--- 9,16 ----
  7,Informatief
  8,Jeugd
  23,Klassiek
+ 25,Kinderen 2-5
+ 26,Kinderen 6-12
  9,Kunst/Cultuur
  19,Maatschappij
  10,Misdaad
diff -crB a/mythstream-0.18_qt4/parsers/omroep/menu_omroep.txt b/mythstream-0.18_qt4/parsers/omroep/menu_omroep.txt
*** a/mythstream-0.18_qt4/parsers/omroep/menu_omroep.txt	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/menu_omroep.txt	2008-07-12 17:45:10.000000000 -0400
***************
*** 9,15 ****
--- 9,17 ----
  2,KRO
  45,LLiNK
  46,MAX
+ 52,MTNL
  8,NCRV
+ 56,NED2
  49,NIO
  4,NMO
  12,NOS
***************
*** 17,22 ****
--- 19,25 ----
  5,OHM
  6,OMROP FRYSLAN
  1,RKK
+ 25,RWN
  23,RVU
  43,TELEAC/NOT
  14,TROS
diff -crB a/mythstream-0.18_qt4/parsers/omroep/menu.pl b/mythstream-0.18_qt4/parsers/omroep/menu.pl
*** a/mythstream-0.18_qt4/parsers/omroep/menu.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/menu.pl	2008-07-13 15:48:11.000000000 -0400
***************
*** 1,8 ****
  #! /usr/bin/perl
  #* ============================================================
! # * File  : omroep/menu.pl
! # * Author: Eric
! # * Date  : 2006-09-30
  # * Description: interactive menu to query www.uitzendinggemist.nl
  # *              (latest episodes)
  # *
--- 1,9 ----
  #! /usr/bin/perl
  #* ============================================================
! # * File    : omroep/menu.pl
! # * Version : 0.2
! # * Author  : Eric
! # * Date    : 2008-07-13
  # * Description: interactive menu to query www.uitzendinggemist.nl
  # *              (latest episodes)
  # *
***************
*** 74,81 ****
  #------------------------------------------------------------------------------
  
    &read_parse();    # get commandline parameters into @in
!   
!   @alph      = split( / */, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ');
    
    $urlPrefix = "http://fake";
    
--- 75,83 ----
  #------------------------------------------------------------------------------
  
    &read_parse();    # get commandline parameters into @in
!     
!   # de Q mist hier, net als op uitzendinggemist
!   @alph      = split( / */, 'ABCDEFGHIJKLMNOPRSTUVWXYZ');
    
    $urlPrefix = "http://fake";
    
diff -crB a/mythstream-0.18_qt4/parsers/omroep/meta2url.pl b/mythstream-0.18_qt4/parsers/omroep/meta2url.pl
*** a/mythstream-0.18_qt4/parsers/omroep/meta2url.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/meta2url.pl	2008-07-13 15:48:57.000000000 -0400
***************
*** 1,8 ****
  #! /usr/bin/perl
  #* ============================================================
! # * File  : rdfcast.pl
! # * Author: Eric Giesselbach <ericgies@kabelfoon.nl>
! # * Date  : 2007-03-14
  # * ============================================================ */
  
  
--- 1,9 ----
  #! /usr/bin/perl
  #* ============================================================
! # * File    : meta2url.pl
! # * Version : 0.1
! # * Author  : Eric Giesselbach <ericgies@kabelfoon.nl>
! # * Date  : 
  # * ============================================================ */
  
  
Only in b/mythstream-0.18_qt4/parsers/omroep: metaplayer.pl
diff -crB a/mythstream-0.18_qt4/parsers/omroep/program_menu.pl b/mythstream-0.18_qt4/parsers/omroep/program_menu.pl
*** a/mythstream-0.18_qt4/parsers/omroep/program_menu.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/program_menu.pl	2008-07-13 15:49:24.000000000 -0400
***************
*** 1,8 ****
  #! /usr/bin/perl
  #* ============================================================
! # * File  : omroep/program_menu.pl
! # * Author: Eric
! # * Date  : 2006-09-30
  # * Description: interactive menu to query www.uitzendinggemist.nl
  # *              (episode history)
  # *
--- 1,9 ----
  #! /usr/bin/perl
  #* ============================================================
! # * File    : omroep/program_menu.pl
! # * Version : 0.2
! # * Author  : Eric
! # * Date    : 2008-07-13
  # * Description: interactive menu to query www.uitzendinggemist.nl
  # *              (episode history)
  # *
***************
*** 75,81 ****
  
    &read_parse();    # get commandline parameters into @in
    
!   @alph      = split( / */, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ');
    
    $urlPrefix = "http://fake";
    
--- 76,84 ----
  
    &read_parse();    # get commandline parameters into @in
    
!   # jaaa, da's een mooie. De Q mist bij uitzendinggemist titelindex
!   # dus of Q&Q wordt niet meer herhaald, of de site gaat weer op de schop...
!   @alph      = split( / */, 'ABCDEFGHIJKLMNOPRSTUVWXYZ');
    
    $urlPrefix = "http://fake";
    
diff -crB a/mythstream-0.18_qt4/parsers/omroep/programurl.pl b/mythstream-0.18_qt4/parsers/omroep/programurl.pl
*** a/mythstream-0.18_qt4/parsers/omroep/programurl.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/programurl.pl	2008-07-12 18:03:40.000000000 -0400
***************
*** 1,14 ****
  #! /usr/bin/perl
  #* ============================================================
  # * File        : omroep/programurl.pl
! # * Version     : 0.1
  # * Author      : Eric
! # * Date        : 2006-09-11
  # * Description: parser for omroep/program_menu.pl
  # *
  # * Requires:
  # * - mythstream v0.17_2
  # * - omroep/program_menu.pl
  # *
  # *  
  # * ============================================================ */
--- 1,15 ----
  #! /usr/bin/perl
  #* ============================================================
  # * File        : omroep/programurl.pl
! # * Version     : 0.2
  # * Author      : Eric
! # * Date        : 2008-07-12
  # * Description: parser for omroep/program_menu.pl
  # *
  # * Requires:
  # * - mythstream v0.17_2
  # * - omroep/program_menu.pl
+ # * - omroep/metaplayer.pl
  # *
  # *  
  # * ============================================================ */
***************
*** 78,87 ****
      if (@matches = ( $line =~ m/<td[^>]+>\s+<a\ href="(\S*)"\ target="player"/ ) )
      {
        $url = @matches[0];
!       
!       # nieuw request, ajax? 
!       $url =~ s/\?aflID=/xml\/metaplayer.xml.php?aflID=/;
!       
        $item = $doc->createElement('item');
        $root->appendChild($item);
  
--- 79,85 ----
      if (@matches = ( $line =~ m/<td[^>]+>\s+<a\ href="(\S*)"\ target="player"/ ) )
      {
        $url = @matches[0];
!             
        $item = $doc->createElement('item');
        $root->appendChild($item);
  
***************
*** 90,96 ****
        $item->appendChild( newNode('name', "uitzending van $date" ) );
        $item->appendChild( newNode('url', $url) );
        $item->appendChild( newNode('descr', "uitzending van $date") );
!       $item->appendChild( newNode('handler', "omroep/meta2url") );
  
        $date = "";
        $name = "";
--- 88,94 ----
        $item->appendChild( newNode('name', "uitzending van $date" ) );
        $item->appendChild( newNode('url', $url) );
        $item->appendChild( newNode('descr', "uitzending van $date") );
!       $item->appendChild( newNode('handler', "omroep/metaplayer") );
  
        $date = "";
        $name = "";
Only in b/mythstream-0.18_qt4/parsers/omroep: README
diff -crB a/mythstream-0.18_qt4/parsers/omroep/rss.pl b/mythstream-0.18_qt4/parsers/omroep/rss.pl
*** a/mythstream-0.18_qt4/parsers/omroep/rss.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/omroep/rss.pl	2008-07-13 15:48:47.000000000 -0400
***************
*** 1,8 ****
  #! /usr/bin/perl
  #* ============================================================
! # * File  : omroep/rss.pl
! # * Author: Eric
! # * Date  : 2006-09-30
  # * Description: parses http://www.uitzendinggemist.nl/index.php/rss
  # *
  # * Requires:
--- 1,9 ----
  #! /usr/bin/perl
  #* ============================================================
! # * File    : omroep/rss.pl
! # * Version : 0.1
! # * Author  : Eric
! # * Date    : 2006-09-30
  # * Description: parses http://www.uitzendinggemist.nl/index.php/rss
  # *
  # * Requires:
***************
*** 63,70 ****
  
    if ($url ne "")
    {
-     # nieuw request, ajax?
-     $url =~ s/\?aflID=/xml\/metaplayer.xml.php?aflID=/;
        
      $item = $doc->createElement('item');
      $root->appendChild($item);
--- 64,69 ----
***************
*** 72,78 ****
      $item->appendChild( newNode('name' , $entry->{title} . " ($date)" ) );
      $item->appendChild( newNode('url'  , $url) );
      $item->appendChild( newNode('descr', $descr ) );
!     $item->appendChild( newNode('handler', 'omroep/meta2url' ) );
  
      $meta = $doc->createElement('meta');
      $meta->appendChild( newNode('name'   , 'beschrijving') );
--- 71,77 ----
      $item->appendChild( newNode('name' , $entry->{title} . " ($date)" ) );
      $item->appendChild( newNode('url'  , $url) );
      $item->appendChild( newNode('descr', $descr ) );
!     $item->appendChild( newNode('handler', 'omroep/metaplayer' ) );
  
      $meta = $doc->createElement('meta');
      $meta->appendChild( newNode('name'   , 'beschrijving') );
diff -crB a/mythstream-0.18_qt4/parsers/shoutcast/genres.txt b/mythstream-0.18_qt4/parsers/shoutcast/genres.txt
*** a/mythstream-0.18_qt4/parsers/shoutcast/genres.txt	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/shoutcast/genres.txt	2008-09-15 14:26:53.000000000 -0400
***************
*** 1,77 ****
! TopTen, [Top 25 Streams]
! Alternative, Alternative
! College,- College
! Industrial,- Industrial
! Punk,- Punk
! Hardcore,- Hardcore
! Ska,- Ska
! Americana, Americana
! Blues,- Blues
! Folk,- Folk
! Cajun,- Cajun
! Bluegrass,- Bluegrass
! Classical, Classical
! Contemporary,- Contemporary
! Opera,- Opera
! Symphonic,- Symphonic
! Country, Country
! Western Swing,- Western Swing
! New Country,- New Country
! Bluegrass,- Bluegrass
! Electronic, Electronic
! Ambient,- Ambient
! Drum%20and%20Bass,- Drum and Bass
! Trance,- Trance
! Techno,- Techno
! House,- House
! Downtempo,- Downtempo
! Breakbeat,- Breakbeat
! Acid Jazz,- Acid Jazz
! Hip%20Hop, Hip-Hop/Rap
! Hardcore,- Hardcore
! Alternative,- Alternative
! Turntablism,- Turntablism
! Old School,- Old School
! New School,- New School
! Jazz, Jazz
! Latin,- Latin
! Swing,- Swing
! Big%20Band,- Big Band
! Classic,- Classic
! Smooth,- Smooth
! Acid%20Jazz,- Acid Jazz
! Pop/Rock, Pop/Rock
! Oldies,- Oldies
! Classic,- Classic
! 80s,- 80s
! Top 40,- Top 40
! Metal,- Metal
! Rock,- Rock
! Pop,- Pop
! R%26B/Soul, R&B/Soul
! Contemporary,- Contemporary
! Classic,- Classic
! Funk,- Funk
! Smooth,- Smooth
! Urban,- Urban
! Spiritual, Spiritual
! Pop,- Pop
! Rock,- Rock
! Alternative,- Alternative
! Gospel,- Gospel
! Country,- Country
! Spoken, Spoken
! Talk,- Talk
! Comedy,- Comedy
! Spoken Word,- Spoken Word
! World, World
! Reggae,- Reggae/Island
! African,- African
! Latin,- Latin
! European,- European
! Middle Eastern,- Middle Eastern
! Asian,- Asian
! Other/Mixed, Other/Mixed
! Eclectic,- Eclectic
! Film,- Film/Show
! Instrumental,- Instrumental
--- 1,388 ----
! <genre name="24hs"></genre>
! <genre name="50s"></genre>
! <genre name="60s"></genre>
! <genre name="70s"></genre>
! <genre name="80s"></genre>
! <genre name="90s"></genre>
! <genre name="Aaa"></genre>
! <genre name="Acid"></genre>
! <genre name="Adult"></genre>
! <genre name="Adulto"></genre>
! <genre name="Afm"></genre>
! <genre name="African"></genre>
! <genre name="Afro"></genre>
! <genre name="Air"></genre>
! <genre name="Albanian"></genre>
! <genre name="All"></genre>
! <genre name="Alles"></genre>
! <genre name="Alt"></genre>
! <genre name="Alternativa"></genre>
! <genre name="Alternative"></genre>
! <genre name="Ambient"></genre>
! <genre name="Americana"></genre>
! <genre name="Anime"></genre>
! <genre name="Anything"></genre>
! <genre name="Arabesk"></genre>
! <genre name="Arabic"></genre>
! <genre name="Armenian"></genre>
! <genre name="Art"></genre>
! <genre name="Asian"></genre>
! <genre name="Audio"></genre>
! <genre name="Auto"></genre>
! <genre name="Autopilot"></genre>
! <genre name="Bachata"></genre>
! <genre name="Backup"></genre>
! <genre name="Balada"></genre>
! <genre name="Baladas"></genre>
! <genre name="Balkan"></genre>
! <genre name="Beatles"></genre>
! <genre name="Best"></genre>
! <genre name="Bhangra"></genre>
! <genre name="Big"></genre>
! <genre name="Black"></genre>
! <genre name="Bluegrass"></genre>
! <genre name="Blues"></genre>
! <genre name="Bossa"></genre>
! <genre name="Brazilian"></genre>
! <genre name="Breakbeat"></genre>
! <genre name="Breaks"></genre>
! <genre name="Brit"></genre>
! <genre name="Bulgarian"></genre>
! <genre name="C64"></genre>
! <genre name="Campus"></genre>
! <genre name="Campusradio"></genre>
! <genre name="Canal"></genre>
! <genre name="Canli"></genre>
! <genre name="Caribbean"></genre>
! <genre name="Catholic"></genre>
! <genre name="Celtic"></genre>
! <genre name="Chanson"></genre>
! <genre name="Charts"></genre>
! <genre name="Chill"></genre>
! <genre name="Chillout"></genre>
! <genre name="Chinese"></genre>
! <genre name="Chr"></genre>
! <genre name="Christian"></genre>
! <genre name="Christmas"></genre>
! <genre name="Clasica"></genre>
! <genre name="Clasicos"></genre>
! <genre name="Classic"></genre>
! <genre name="Classical"></genre>
! <genre name="Classique"></genre>
! <genre name="Club"></genre>
! <genre name="College"></genre>
! <genre name="Comedy"></genre>
! <genre name="Community"></genre>
! <genre name="Compas"></genre>
! <genre name="Comunitaria"></genre>
! <genre name="Contemporary"></genre>
! <genre name="Cool"></genre>
! <genre name="Country"></genre>
! <genre name="Cristiana"></genre>
! <genre name="Croatia"></genre>
! <genre name="Croatian"></genre>
! <genre name="Cultura"></genre>
! <genre name="Cultural"></genre>
! <genre name="Cumbia"></genre>
! <genre name="Damar"></genre>
! <genre name="Dance"></genre>
! <genre name="Dancehall"></genre>
! <genre name="Dark"></genre>
! <genre name="Darkwave"></genre>
! <genre name="Das"></genre>
! <genre name="Decades"></genre>
! <genre name="Deep"></genre>
! <genre name="Del"></genre>
! <genre name="Deportes"></genre>
! <genre name="Der"></genre>
! <genre name="Desi"></genre>
! <genre name="Die"></genre>
! <genre name="Digital"></genre>
! <genre name="Disco"></genre>
! <genre name="Discofox"></genre>
! <genre name="Dnb"></genre>
! <genre name="Domaca"></genre>
! <genre name="Doowop"></genre>
! <genre name="Downtempo"></genre>
! <genre name="Drum"></genre>
! <genre name="Dub"></genre>
! <genre name="Dubstep"></genre>
! <genre name="Easy"></genre>
! <genre name="Ebm"></genre>
! <genre name="Ecl"></genre>
! <genre name="Eclectic"></genre>
! <genre name="Electro"></genre>
! <genre name="Electronic"></genre>
! <genre name="Electronica"></genre>
! <genre name="Elektro"></genre>
! <genre name="Ellinika"></genre>
! <genre name="Emisora"></genre>
! <genre name="Emo"></genre>
! <genre name="Enfants"></genre>
! <genre name="English"></genre>
! <genre name="Espa"></genre>
! <genre name="Ethnic"></genre>
! <genre name="Euro"></genre>
! <genre name="Eurodance"></genre>
! <genre name="European"></genre>
! <genre name="Evangelica"></genre>
! <genre name="Everything"></genre>
! <genre name="Exitos"></genre>
! <genre name="Experimental"></genre>
! <genre name="Extreme"></genre>
! <genre name="Fantasy"></genre>
! <genre name="Film"></genre>
! <genre name="Fire"></genre>
! <genre name="Flamenco"></genre>
! <genre name="Folk"></genre>
! <genre name="Folklore"></genre>
! <genre name="Free"></genre>
! <genre name="Freeform"></genre>
! <genre name="Freestyle"></genre>
! <genre name="French"></genre>
! <genre name="Full"></genre>
! <genre name="Funk"></genre>
! <genre name="Funky"></genre>
! <genre name="Game"></genre>
! <genre name="Garage"></genre>
! <genre name="Gay"></genre>
! <genre name="Generaliste"></genre>
! <genre name="Genres"></genre>
! <genre name="German"></genre>
! <genre name="Goa"></genre>
! <genre name="Gold"></genre>
! <genre name="Golden"></genre>
! <genre name="Good"></genre>
! <genre name="Gospel"></genre>
! <genre name="Goth"></genre>
! <genre name="Gothic"></genre>
! <genre name="Gramy"></genre>
! <genre name="Greece"></genre>
! <genre name="Greek"></genre>
! <genre name="Grupero"></genre>
! <genre name="Haitian"></genre>
! <genre name="Halk"></genre>
! <genre name="Halloween"></genre>
! <genre name="Ham"></genre>
! <genre name="Hands"></genre>
! <genre name="Happy"></genre>
! <genre name="Hard"></genre>
! <genre name="Hardcore"></genre>
! <genre name="Hardstyle"></genre>
! <genre name="Hardtechno"></genre>
! <genre name="Hardtek"></genre>
! <genre name="Hawaiian"></genre>
! <genre name="Hbwa"></genre>
! <genre name="Heavy"></genre>
! <genre name="Her"></genre>
! <genre name="High"></genre>
! <genre name="Hindi"></genre>
! <genre name="Hip"></genre>
! <genre name="Hiphop"></genre>
! <genre name="Hit"></genre>
! <genre name="Hits"></genre>
! <genre name="Hollands"></genre>
! <genre name="Hot"></genre>
! <genre name="House"></genre>
! <genre name="Hrvatska"></genre>
! <genre name="Http"></genre>
! <genre name="Hungarian"></genre>
! <genre name="Idm"></genre>
! <genre name="Ilahi"></genre>
! <genre name="Independent"></genre>
! <genre name="Indian"></genre>
! <genre name="Indie"></genre>
! <genre name="Indonesia"></genre>
! <genre name="Industrial"></genre>
! <genre name="Indy"></genre>
! <genre name="Info"></genre>
! <genre name="Informacion"></genre>
! <genre name="Instrumental"></genre>
! <genre name="Internacional"></genre>
! <genre name="International"></genre>
! <genre name="Irish"></genre>
! <genre name="Islam"></genre>
! <genre name="Islami"></genre>
! <genre name="Italian"></genre>
! <genre name="Italiana"></genre>
! <genre name="Italo"></genre>
! <genre name="Japanese"></genre>
! <genre name="Jazz"></genre>
! <genre name="Jewish"></genre>
! <genre name="Jornalismo"></genre>
! <genre name="Jpop"></genre>
! <genre name="Jrock"></genre>
! <genre name="Jungle"></genre>
! <genre name="Just"></genre>
! <genre name="Juvenil"></genre>
! <genre name="Karisik"></genre>
! <genre name="Kompa"></genre>
! <genre name="Konpa"></genre>
! <genre name="Kurdish"></genre>
! <genre name="Latin"></genre>
! <genre name="Latina"></genre>
! <genre name="Latino"></genre>
! <genre name="Latinos"></genre>
! <genre name="Life"></genre>
! <genre name="Light"></genre>
! <genre name="Live"></genre>
! <genre name="Local"></genre>
! <genre name="Lokaal"></genre>
! <genre name="Lokale"></genre>
! <genre name="Lounge"></genre>
! <genre name="Love"></genre>
! <genre name="Mainstream"></genre>
! <genre name="Makina"></genre>
! <genre name="Manele"></genre>
! <genre name="Merengue"></genre>
! <genre name="Metal"></genre>
! <genre name="Mexican"></genre>
! <genre name="Middle"></genre>
! <genre name="Minimal"></genre>
! <genre name="Mix"></genre>
! <genre name="Mixed"></genre>
! <genre name="Modern"></genre>
! <genre name="Mpb"></genre>
! <genre name="Multi"></genre>
! <genre name="Music"></genre>
! <genre name="Musica"></genre>
! <genre name="Musical"></genre>
! <genre name="Musik"></genre>
! <genre name="Musique"></genre>
! <genre name="Muzica"></genre>
! <genre name="Muziek"></genre>
! <genre name="Muzik"></genre>
! <genre name="Muzika"></genre>
! <genre name="Muzyka"></genre>
! <genre name="Narodna"></genre>
! <genre name="Ned"></genre>
! <genre name="Nederland"></genre>
! <genre name="Nederlands"></genre>
! <genre name="Nederlandse"></genre>
! <genre name="Nederlandstalig"></genre>
! <genre name="New"></genre>
! <genre name="News"></genre>
! <genre name="Non"></genre>
! <genre name="Nonstop"></genre>
! <genre name="Noticias"></genre>
! <genre name="Npr"></genre>
! <genre name="Old"></genre>
! <genre name="Oldies"></genre>
! <genre name="Oldskool"></genre>
! <genre name="Online"></genre>
! <genre name="Only"></genre>
! <genre name="Oriental"></genre>
! <genre name="Original"></genre>
! <genre name="Other"></genre>
! <genre name="Pagan"></genre>
! <genre name="Party"></genre>
! <genre name="Period"></genre>
! <genre name="Persian"></genre>
! <genre name="Pinoy"></genre>
! <genre name="Piraat"></genre>
! <genre name="Piraten"></genre>
! <genre name="Piratenhits"></genre>
! <genre name="Police"></genre>
! <genre name="Polka"></genre>
! <genre name="Polska"></genre>
! <genre name="Polskie"></genre>
! <genre name="Pop"></genre>
! <genre name="Popular"></genre>
! <genre name="Portuguese"></genre>
! <genre name="Power"></genre>
! <genre name="Progressive"></genre>
! <genre name="Psy"></genre>
! <genre name="Psychedelic"></genre>
! <genre name="Psytrance"></genre>
! <genre name="Public"></genre>
! <genre name="Punjabi"></genre>
! <genre name="Punk"></genre>
! <genre name="Pure"></genre>
! <genre name="Querbeet"></genre>
! <genre name="R&amp;b"></genre>
! <genre name="Radio"></genre>
! <genre name="Radyo"></genre>
! <genre name="Railroad"></genre>
! <genre name="Random"></genre>
! <genre name="Rap"></genre>
! <genre name="Real"></genre>
! <genre name="Reggae"></genre>
! <genre name="Reggaeton"></genre>
! <genre name="Regional"></genre>
! <genre name="Relax"></genre>
! <genre name="Religion"></genre>
! <genre name="Religious"></genre>
! <genre name="Retro"></genre>
! <genre name="Rnb"></genre>
! <genre name="Rock"></genre>
! <genre name="Romania"></genre>
! <genre name="Romanian"></genre>
! <genre name="Romantic"></genre>
! <genre name="Romantica"></genre>
! <genre name="Roots"></genre>
! <genre name="Russian"></genre>
! <genre name="Salsa"></genre>
! <genre name="Scanner"></genre>
! <genre name="Schlager"></genre>
! <genre name="Scouse"></genre>
! <genre name="Sertanejo"></genre>
! <genre name="Sessiz"></genre>
! <genre name="Shqip"></genre>
! <genre name="Sinhala"></genre>
! <genre name="Slow"></genre>
! <genre name="Smooth"></genre>
! <genre name="Soca"></genre>
! <genre name="Soft"></genre>
! <genre name="Solo"></genre>
! <genre name="Soul"></genre>
! <genre name="Soulful"></genre>
! <genre name="Sound"></genre>
! <genre name="Soundtrack"></genre>
! <genre name="Soundtracks"></genre>
! <genre name="Spain"></genre>
! <genre name="Spanish"></genre>
! <genre name="Spiritual"></genre>
! <genre name="Spoken"></genre>
! <genre name="Sports"></genre>
! <genre name="Stoner"></genre>
! <genre name="Stream"></genre>
! <genre name="Super"></genre>
! <genre name="Synthpop"></genre>
! <genre name="Talk"></genre>
! <genre name="Tamil"></genre>
! <genre name="Tech"></genre>
! <genre name="Techno"></genre>
! <genre name="Tel"></genre>
! <genre name="Test"></genre>
! <genre name="The"></genre>
! <genre name="Todo"></genre>
! <genre name="Todos"></genre>
! <genre name="Top"></genre>
! <genre name="Top40"></genre>
! <genre name="Tout"></genre>
! <genre name="Trance"></genre>
! <genre name="Tropical"></genre>
! <genre name="Turk"></genre>
! <genre name="Turkce"></genre>
! <genre name="Turkish"></genre>
! <genre name="Underground"></genre>
! <genre name="Universidad"></genre>
! <genre name="Unsigned"></genre>
! <genre name="Urban"></genre>
! <genre name="Van"></genre>
! <genre name="Vari"></genre>
! <genre name="Variado"></genre>
! <genre name="Varied"></genre>
! <genre name="Variety"></genre>
! <genre name="Varios"></genre>
! <genre name="Various"></genre>
! <genre name="Video"></genre>
! <genre name="Vocal"></genre>
! <genre name="Volksmusik"></genre>
! <genre name="Web"></genre>
! <genre name="Whatever"></genre>
! <genre name="World"></genre>
! <genre name="Wusf"></genre>
! <genre name="Www"></genre>
! <genre name="Zabavna"></genre>
! <genre name="Zouk"></genre>
\ No newline at end of file
diff -crB a/mythstream-0.18_qt4/parsers/shoutcast/menu.pl b/mythstream-0.18_qt4/parsers/shoutcast/menu.pl
*** a/mythstream-0.18_qt4/parsers/shoutcast/menu.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/shoutcast/menu.pl	2008-09-15 14:43:36.000000000 -0400
***************
*** 1,18 ****
  #! /usr/bin/perl
  #* ============================================================
! # * File  : menu.pl
! # * Author: Eric
! # * Date  : 2006-09-29
! # * Description: Shoutcast genre query
! # *              http://www.shoutcast.com
! # * Requires mythstream v0.17_2
  # * 
! # * == Use with stream item values below ==
! # * STREAM URL    : http://www.shoutcast.com
! # * STREAM HANDLER: *shoutcast/menu
  # * 
  # * ============================================================ */
  
   
      
  use English;
--- 1,27 ----
  #! /usr/bin/perl
  #* ============================================================
! # * File    : menu.pl
! # * Release : 2
! # * Author  : Eric
! # * Date    : 2008 sept
! # * Description: Shoutcast genre query from disk. Source is
! # *              http://yp.shoutcast.com/sbin/newxml.phtml
! # *              Caching is nice and gives more actual data
! # *              but now you can edit the list, it's a bit long
  # * 
! # * Requires mythstream v0.17_2
  # * 
  # * ============================================================ */
  
+ # genre list:
+ #   http://yp.shoutcast.com/sbin/newxml.phtml
+ # station list:
+ #   http://yp.shoutcast.com/sbin/newxml.phtml?genre=Trance
+ # station URL:
+ #   http://yp.shoutcast.com/sbin/tunein-station.pls?id=1025
+ # 
+ # This API is for noncommercial use only:
+ #   http://forums.winamp.com/showthread.php?s=&threadid=295638
   
      
  use English;
***************
*** 75,92 ****
  
    if ($stage == 0)
    {
-   
      open( FD, "<shoutcast/genres.txt" );
      @list = <FD>;
      close FD;
    
      foreach $line (@list)
      {
!       ($id, $genre) = split(',', $line);
        $item = $doc->createElement('item');
        $root->appendChild($item);
        $item->appendChild( newNode('name' , "Shoutcast $genre") );
!       $item->appendChild( newNode('url'  , "$urlPrefix#1#$id#") );
        $item->appendChild( newNode('descr', 'Select ' . $genre ) );
        $item->appendChild( newNode('handler', '*shoutcast/menu' ) );
      }
--- 84,102 ----
  
    if ($stage == 0)
    {
      open( FD, "<shoutcast/genres.txt" );
      @list = <FD>;
      close FD;
+ 
+     # <genre name="24hs"></genre>
    
      foreach $line (@list)
      {
!       ($fill, $genre, $fill) = split('"', $line);
        $item = $doc->createElement('item');
        $root->appendChild($item);
        $item->appendChild( newNode('name' , "Shoutcast $genre") );
!       $item->appendChild( newNode('url'  , "$urlPrefix#1#$genre#") );
        $item->appendChild( newNode('descr', 'Select ' . $genre ) );
        $item->appendChild( newNode('handler', '*shoutcast/menu' ) );
      }
***************
*** 94,105 ****
    }
    elsif ($stage == 1)
    {
!     $urlbase = 'http://www.shoutcast.com/directory/?sgenre=';
  
      $item = $doc->createElement('item');
      $root->appendChild($item);
      $item->appendChild( newNode('name' , "Shoutcast $path") );
!     $item->appendChild( newNode('url'  , $urlbase . $path) );
      $item->appendChild( newNode('descr', 'Shoutcast genre $path' ) );
      $item->appendChild( newNode('handler', 'shoutcast/shoutcast' ) );
    }
--- 104,115 ----
    }
    elsif ($stage == 1)
    {
!     $urlbase = 'http://yp.shoutcast.com/sbin/newxml.phtml?genre=';
  
      $item = $doc->createElement('item');
      $root->appendChild($item);
      $item->appendChild( newNode('name' , "Shoutcast $path") );
!     $item->appendChild( newNode('url'  , $urlbase . $path . "&limit=100") );
      $item->appendChild( newNode('descr', 'Shoutcast genre $path' ) );
      $item->appendChild( newNode('handler', 'shoutcast/shoutcast' ) );
    }
diff -crB a/mythstream-0.18_qt4/parsers/shoutcast/shoutcast.pl b/mythstream-0.18_qt4/parsers/shoutcast/shoutcast.pl
*** a/mythstream-0.18_qt4/parsers/shoutcast/shoutcast.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/shoutcast/shoutcast.pl	2008-09-15 14:40:07.000000000 -0400
***************
*** 1,31 ****
! #!/usr/bin/perl
! #
! # shoutcast parser v0.01 by R. de Vos
! # made by the example of icecast.pl 
! #
! #
! # for mythstream and streamtuned (http://home.kabelfoon.nl/~moongies/streamtuned.html)  
  # 
! # i use it with urls like this.
! # http://www.shoutcast.com/directory/index.phtml?s=<search>
! # http://www.shoutcast.com/directory/index.phtml?sgenre=Techno
! # http://www.shoutcast.com/directory/?s=venezuela
! # http://www.shoutcast.com?s=comedy
! # 
! # todo: parse webpage beter and show bitrates of the streams
  
- use HTML::TokeParser;
  use English;
- use XML::Simple;
  use XML::DOM;
  
! # create object
! $xml = new XML::Simple;
  
  my $doc = XML::DOM::Document->new;
  my $head = $doc->createXMLDecl ('1.0');
  my $root = $doc->createElement('items');
  
  sub newNode
  {
    local $name  = shift;
--- 1,42 ----
! #! /usr/bin/perl
! #* ============================================================
! # * File        : Shoutcast parser
! # * Release     : 2
! # * Author      : Eric
! # * Date        : 2008 sept
! # * Description : Parser for Shoutcast XML API
! # * ============================================================ */
! 
! # genre list:
! #   http://yp.shoutcast.com/sbin/newxml.phtml
! # station list:
! #   http://yp.shoutcast.com/sbin/newxml.phtml?genre=Trance
! # station URL:
! #   http://yp.shoutcast.com/sbin/tunein-station.pls?id=1025
  # 
! # This API is for noncommercial use only:
! #   http://forums.winamp.com/showthread.php?s=&threadid=295638
! 
  
  use English;
  use XML::DOM;
+ use Data::Dumper;
  
! $xml = new XML::DOM::Parser;
  
  my $doc = XML::DOM::Document->new;
  my $head = $doc->createXMLDecl ('1.0');
  my $root = $doc->createElement('items');
  
+ sub specialchars
+ {
+    local $str = shift;
+    $str =~ s/&quot;/"/g;
+    $str =~ s/&amp;/&/g;
+ 
+    return $str;
+ }
+ 
  sub newNode
  {
    local $name  = shift;
***************
*** 37,94 ****
    return $node;
  }
  
! &read_parse();    # get commandline parameters into @in
! $source = $in[0]; # source filename from command line
! 
! 
! $p = HTML::TokeParser->new(shift||"$source");
! 
! ### system("cp $source /tmp/proef.html");
  
! while (my $token = $p->get_tag("a"))
  {
!   my $temp2 = $token->[1]{href} || "-";
!   if ($temp2 =~ /playlist\.pls/)
!   {
! #  print "<$temp2>\n";
!   $token=$p->get_tag("font");
!   my $description=$p->get_trimmed_text("br");
!   my $url="http://www.shoutcast.com/$temp2";
!   $item = $doc->createElement('item');
!   $root->appendChild($item);
!   
!   if ($description =~ /\[IMG\] (.*)/)
!   {
!     $description = $1;
!   }
!   
!   while (($description =~ /^ (.*)/) || ("$description" =~ /^\r(.*)/) || ("$description" =~ /^\n(.*)/))
!   {
!     $description = $1;
!   }
    
!   if ($description =~ /\[(.*)/)
    {
!     $description = "\[$1";
    }
    
!   $item->appendChild( newNode('name' , $description) );
!   $item->appendChild( newNode('url'  , $url) );
! #  $item->appendChild( newNode('descr', $entry->{genre}) );    
  
  
  
  
!   }
! #  if ("$temp2" eq "#001E5A")
! #  {
! #    my $url=$p->get_trimmed_text("/td");
! #    {
! #      print ">>$url\n";
! #    }
! # }
  }
  
  print $head->toString;
  print $root->toString;
  print "\n";
--- 48,120 ----
    return $node;
  }
  
! sub checkNode
! {
!    local $node = shift;   
!    return ( $node && !($node =~ /^HASH/) )  # deref empty hash element
! }
  
! sub addMetaNode
  {
!   local $node  = shift;
!   local $name  = shift;
!   local $type  = shift;
    
!   if ( checkNode($node) )
    {
!    if ($type eq '')
!    {
!      $type = "inline";
!      if ($node =~ /\n/)           { $type = "text" }
!      if ($node =~ /<.+>.+<\/.+>/) { $type = "html" }
!    }
!    
!    $meta = $doc->createElement('meta');
!    $meta->appendChild( newNode('name'   , $name) );
!    $meta->appendChild( newNode('content', $node) );
!    $meta->appendChild( newNode('viewer' , $type) );
!    $item->appendChild( $meta );
    }
+ }
+ 
+ sub parseItem
+ {
+   local $entry = shift;
    
!     $url   = "http://yp.shoutcast.com/sbin/tunein-station.pls?id=" . $entry->getAttribute("id");
!     $descr = $entry->getAttribute("genre") . "(" . $entry->getAttribute("br") . " kbit/s)";
!     $name  = $entry->getAttribute("name");
! 
!     $name = specialchars($name);
!     $descr = specialchars($descr);
!     
!     $item = $doc->createElement('item');
!     $item->appendChild( newNode('name'   , $name));
!     $item->appendChild( newNode('url'   , $url));
!     $item->appendChild( newNode('descr'   , $descr) );
!     
!     $root->appendChild($item);
! }
  
+ #------------------------------------------------------------------------------
+ # Init and Run
+ #------------------------------------------------------------------------------
  
+ &read_parse();    # get commandline parameters into @in
+ $source = $in[0]; # source filename from command line
  
+ eval{ $data = $xml->parsefile($source); };
  
! $entries = $data->getElementsByTagName("station");
! $n = $entries->getLength;
! 
! for(my $i=0; $i<$n; $i++)
! {
! 	parseItem($entries->item($i));
  }
  
+ binmode STDOUT, ":utf8";
+ 
  print $head->toString;
  print $root->toString;
  print "\n";
Only in a/mythstream-0.18_qt4/parsers/shoutcast: shoutcasttv.xml
diff -crB a/mythstream-0.18_qt4/parsers/shoutcast.pl b/mythstream-0.18_qt4/parsers/shoutcast.pl
*** a/mythstream-0.18_qt4/parsers/shoutcast.pl	2009-08-13 08:43:56.000000000 -0400
--- b/mythstream-0.18_qt4/parsers/shoutcast.pl	2009-08-13 09:10:50.000000000 -0400
***************
*** 1,31 ****
! #!/usr/bin/perl
! #
! # shoutcast parser v0.01 by R. de Vos
! # made by the example of icecast.pl 
! #
! #
! # for mythstream and streamtuned (http://home.kabelfoon.nl/~moongies/streamtuned.html)  
  # 
! # i use it with urls like this.
! # http://www.shoutcast.com/directory/index.phtml?s=<search>
! # http://www.shoutcast.com/directory/index.phtml?sgenre=Techno
! # http://www.shoutcast.com/directory/?s=venezuela
! # http://www.shoutcast.com?s=comedy
! # 
! # todo: parse webpage beter and show bitrates of the streams
  
- use HTML::TokeParser;
  use English;
- use XML::Simple;
  use XML::DOM;
  
! # create object
! $xml = new XML::Simple;
  
  my $doc = XML::DOM::Document->new;
  my $head = $doc->createXMLDecl ('1.0');
  my $root = $doc->createElement('items');
  
  sub newNode
  {
    local $name  = shift;
--- 1,42 ----
! #! /usr/bin/perl
! #* ============================================================
! # * File        : Shoutcast parser
! # * Release     : 2
! # * Author      : Eric
! # * Date        : 2008 sept
! # * Description : Parser for Shoutcast XML API
! # * ============================================================ */
! 
! # genre list:
! #   http://yp.shoutcast.com/sbin/newxml.phtml
! # station list:
! #   http://yp.shoutcast.com/sbin/newxml.phtml?genre=Trance
! # station URL:
! #   http://yp.shoutcast.com/sbin/tunein-station.pls?id=1025
  # 
! # This API is for noncommercial use only:
! #   http://forums.winamp.com/showthread.php?s=&threadid=295638
! 
  
  use English;
  use XML::DOM;
+ use Data::Dumper;
  
! $xml = new XML::DOM::Parser;
  
  my $doc = XML::DOM::Document->new;
  my $head = $doc->createXMLDecl ('1.0');
  my $root = $doc->createElement('items');
  
+ sub specialchars
+ {
+    local $str = shift;
+    $str =~ s/&quot;/"/g;
+    $str =~ s/&amp;/&/g;
+ 
+    return $str;
+ }
+ 
  sub newNode
  {
    local $name  = shift;
***************
*** 37,94 ****
    return $node;
  }
  
! &read_parse();    # get commandline parameters into @in
! $source = $in[0]; # source filename from command line
! 
! 
! $p = HTML::TokeParser->new(shift||"$source");
! 
! ### system("cp $source /tmp/proef.html");
  
! while (my $token = $p->get_tag("a"))
  {
!   my $temp2 = $token->[1]{href} || "-";
!   if ($temp2 =~ /playlist\.pls/)
!   {
! #  print "<$temp2>\n";
!   $token=$p->get_tag("font");
!   my $description=$p->get_trimmed_text("br");
!   my $url="http://www.shoutcast.com/$temp2";
!   $item = $doc->createElement('item');
!   $root->appendChild($item);
!   
!   if ($description =~ /\[IMG\] (.*)/)
!   {
!     $description = $1;
!   }
!   
!   while (($description =~ /^ (.*)/) || ("$description" =~ /^\r(.*)/) || ("$description" =~ /^\n(.*)/))
!   {
!     $description = $1;
!   }
    
!   if ($description =~ /\[(.*)/)
    {
!     $description = "\[$1";
    }
    
!   $item->appendChild( newNode('name' , $description) );
!   $item->appendChild( newNode('url'  , $url) );
! #  $item->appendChild( newNode('descr', $entry->{genre}) );    
  
  
  
  
!   }
! #  if ("$temp2" eq "#001E5A")
! #  {
! #    my $url=$p->get_trimmed_text("/td");
! #    {
! #      print ">>$url\n";
! #    }
! # }
  }
  
  print $head->toString;
  print $root->toString;
  print "\n";
--- 48,120 ----
    return $node;
  }
  
! sub checkNode
! {
!    local $node = shift;   
!    return ( $node && !($node =~ /^HASH/) )  # deref empty hash element
! }
  
! sub addMetaNode
  {
!   local $node  = shift;
!   local $name  = shift;
!   local $type  = shift;
    
!   if ( checkNode($node) )
    {
!    if ($type eq '')
!    {
!      $type = "inline";
!      if ($node =~ /\n/)           { $type = "text" }
!      if ($node =~ /<.+>.+<\/.+>/) { $type = "html" }
!    }
!    
!    $meta = $doc->createElement('meta');
!    $meta->appendChild( newNode('name'   , $name) );
!    $meta->appendChild( newNode('content', $node) );
!    $meta->appendChild( newNode('viewer' , $type) );
!    $item->appendChild( $meta );
    }
+ }
+ 
+ sub parseItem
+ {
+   local $entry = shift;
    
!     $url   = "http://yp.shoutcast.com/sbin/tunein-station.pls?id=" . $entry->getAttribute("id");
!     $descr = $entry->getAttribute("genre") . "(" . $entry->getAttribute("br") . " kbit/s)";
!     $name  = $entry->getAttribute("name");
! 
!     $name = specialchars($name);
!     $descr = specialchars($descr);
!     
!     $item = $doc->createElement('item');
!     $item->appendChild( newNode('name'   , $name));
!     $item->appendChild( newNode('url'   , $url));
!     $item->appendChild( newNode('descr'   , $descr) );
!     
!     $root->appendChild($item);
! }
  
+ #------------------------------------------------------------------------------
+ # Init and Run
+ #------------------------------------------------------------------------------
  
+ &read_parse();    # get commandline parameters into @in
+ $source = $in[0]; # source filename from command line
  
+ eval{ $data = $xml->parsefile($source); };
  
! $entries = $data->getElementsByTagName("station");
! $n = $entries->getLength;
! 
! for(my $i=0; $i<$n; $i++)
! {
! 	parseItem($entries->item($i));
  }
  
+ binmode STDOUT, ":utf8";
+ 
  print $head->toString;
  print $root->toString;
  print "\n";
Only in a/mythstream-0.18_qt4/parsers/youtube: youvid.pl
